<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
using NexusMods.Paths;
<#
    var magicFiles = new[] {"magic_sigs.txt"};
    var digits = new HashSet<char>("0123456789".ToArray());
    var magicRows = magicFiles
        .SelectMany(file => File.ReadAllLines(Path.Combine("./Definitions/", file)))
        .Select(row => row.Split(','))
        .SelectMany(row => row[2].Split('|').Select(e => new
        {
            EnumName = (digits.Contains(e.First()) ? "_" + e : e).Replace(".", ""),
            Sig = row[1].Trim().Split(' ').Select(b => "0x" + b),
            Description = row[0]
        })).ToArray();

    var extraFiles = new [] {"mundane_sigs.txt"};
    var mundaneRows = extraFiles
        .SelectMany(file => File.ReadAllLines(Path.Combine("./Definitions/", file)))
        .Select(row => row.Split(','))
        .Select(row => new
        {
            EnumName = row[1],
            Description = row[0],
            Extension = row[2]
        }).ToArray();
#>
#pragma warning disable CS1591 // missing XML documentation
// ReSharper disable All
namespace NexusMods.Abstractions.FileExtractor {

    public enum FileType
    {<#
        var names = magicRows.Select(r => r.EnumName)
            .Concat(mundaneRows.Select(m => m.EnumName))
            .Distinct().OrderBy(r => r).ToArray();

        // This is slow; but just template :)
        foreach (var name in names)
        {
            var magicName = magicRows.FirstOrDefault(x => x.EnumName == name);
            if (magicName != null)
            {#>
                /// <summary>
                /// <#=magicName.Description#>
                /// </summary>
                <#= magicName.EnumName #>,
            <#
                continue;
            }

            var mundane = mundaneRows.First(x => x.EnumName == name);
            #>
            /// <summary>
            /// <#=mundane.Description#>
            /// </summary>
            <#= mundane.EnumName #>,
<#
        }
#>
    }

    public static class Definitions {


    public static readonly (FileType, byte[])[] Signatures = {
    <#
    foreach (var row in magicRows)
    {
#>
        // <#= row.Description #>
        (FileType.<#= row.EnumName #>, new byte[] {<#= string.Join(", ", row.Sig) #>}),

        <#
    }
#>

    };

    public static readonly (FileType, Extension)[] Extensions = {
        <#
    foreach (var row in mundaneRows)
    {
#>
        // <#= row.Description #>
        (FileType.<#= row.EnumName.Trim() #>, new Extension("<#= row.Extension.Trim() #>")),

        <#
    }
#>

    };

}}
