
// This file is automatically generated by the T4 template: VerbRegistration.tt
// do not edit this file directly
using Microsoft.Extensions.DependencyInjection;
namespace NexusMods.CLI;
using NexusMods.CLI.Verbs;

public static class CommandLineBuilderExtensions{ 

public static void AddCLIVerbs(this IServiceCollection services) {
CommandLineConfigurator.RegisterCommand<AnalyzeArchive>(AnalyzeArchive.Definition, c => ((AnalyzeArchive)c).Run);
services.AddScoped<AnalyzeArchive>();
CommandLineConfigurator.RegisterCommand<Apply>(Apply.Definition, c => ((Apply)c).Run);
services.AddScoped<Apply>();
CommandLineConfigurator.RegisterCommand<ChangeTracking>(ChangeTracking.Definition, c => ((ChangeTracking)c).Run);
services.AddScoped<ChangeTracking>();
CommandLineConfigurator.RegisterCommand<ExtractArchive>(ExtractArchive.Definition, c => ((ExtractArchive)c).Run);
services.AddScoped<ExtractArchive>();
CommandLineConfigurator.RegisterCommand<FlattenList>(FlattenList.Definition, c => ((FlattenList)c).Run);
services.AddScoped<FlattenList>();
CommandLineConfigurator.RegisterCommand<HashFolder>(HashFolder.Definition, c => ((HashFolder)c).Run);
services.AddScoped<HashFolder>();
CommandLineConfigurator.RegisterCommand<InstallMod>(InstallMod.Definition, c => ((InstallMod)c).Run);
services.AddScoped<InstallMod>();
CommandLineConfigurator.RegisterCommand<ListGames>(ListGames.Definition, c => ((ListGames)c).Run);
services.AddScoped<ListGames>();
CommandLineConfigurator.RegisterCommand<ListHistory>(ListHistory.Definition, c => ((ListHistory)c).Run);
services.AddScoped<ListHistory>();
CommandLineConfigurator.RegisterCommand<ListManagedGames>(ListManagedGames.Definition, c => ((ListManagedGames)c).Run);
services.AddScoped<ListManagedGames>();
CommandLineConfigurator.RegisterCommand<ListModContents>(ListModContents.Definition, c => ((ListModContents)c).Run);
services.AddScoped<ListModContents>();
CommandLineConfigurator.RegisterCommand<ListMods>(ListMods.Definition, c => ((ListMods)c).Run);
services.AddScoped<ListMods>();
CommandLineConfigurator.RegisterCommand<ManageGame>(ManageGame.Definition, c => ((ManageGame)c).Run);
services.AddScoped<ManageGame>();
CommandLineConfigurator.RegisterCommand<Rename>(Rename.Definition, c => ((Rename)c).Run);
services.AddScoped<Rename>();
}
}