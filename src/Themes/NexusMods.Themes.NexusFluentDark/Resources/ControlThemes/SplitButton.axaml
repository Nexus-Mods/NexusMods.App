<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:NexusMods.Icons;assembly=NexusMods.Icons">
    
    <Design.PreviewWith>
        <Border Padding="16">
            <StackPanel>
                <SplitButton>
                    <TextBlock Text="Medium" />
                    <SplitButton.Flyout>
                        <MenuFlyout>
                            <MenuItem Header="Install" />
                            <MenuItem Header="Advanced Install" />
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
                <SplitButton IsEnabled="False">
                    <TextBlock Text="Medium" />
                    <SplitButton.Flyout>
                        <MenuFlyout>
                            <MenuItem Header="Install" />
                            <MenuItem Header="Advanced Install" />
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
                <SplitButton Classes="Compact">
                    <TextBlock Text="Compact" />
                    <SplitButton.Flyout>
                        <MenuFlyout>
                            <MenuItem Header="Install" />
                            <MenuItem Header="Advanced Install" />
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <x:Double x:Key="SplitButtonPrimaryButtonSize">32</x:Double>
    <x:Double x:Key="SplitButtonSecondaryButtonSize">32</x:Double>
    <x:Double x:Key="SplitButtonSeparatorWidth">1</x:Double>
    <x:Double x:Key="SplitButtonMinHeight">32</x:Double>

    <!-- Resources for SplitButton.xaml (shared with ToggleSplitButton) -->
    <StaticResource x:Key="SplitButtonBackground" ResourceKey="PrimaryModerateBrush" />
    <StaticResource x:Key="SplitButtonBackgroundPointerOver" ResourceKey="PrimaryStrongBrush" />
    <StaticResource x:Key="SplitButtonBackgroundPressed" ResourceKey="PrimarySubduedBrush" />
    <SolidColorBrush x:Key="SplitButtonBackgroundDisabled"
                     Color="{StaticResource PrimaryModerate}"
                     Opacity="{StaticResource OpacityDisabledElement}" />

    <!-- checked state not used at the moment -->
    <!-- <StaticResource x:Key="SplitButtonBackgroundChecked" ResourceKey="SystemControlHighlightAccentBrush" /> -->
    <!--   <SolidColorBrush x:Key="SplitButtonBackgroundCheckedPointerOver" -->
    <!--                    Color="{DynamicResource SystemAccentColorLight1}" /> -->
    <!-- <SolidColorBrush x:Key="SplitButtonBackgroundCheckedPressed" Color="{DynamicResource SystemAccentColorDark1}" /> -->
    <!-- <StaticResource x:Key="SplitButtonBackgroundCheckedDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" /> -->

    <StaticResource x:Key="SplitButtonForeground" ResourceKey="NeutralInvertedBrush" />
    <StaticResource x:Key="SplitButtonForegroundPointerOver" ResourceKey="NeutralInvertedBrush" />
    <StaticResource x:Key="SplitButtonForegroundPressed" ResourceKey="NeutralInvertedBrush" />
    <StaticResource x:Key="SplitButtonForegroundDisabled" ResourceKey="NeutralInvertedBrush" />

    <!-- checked state not used at the moment -->
    <!-- <StaticResource x:Key="SplitButtonForegroundChecked" ResourceKey="SystemControlHighlightAltChromeWhiteBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonForegroundCheckedPointerOver" -->
    <!--                 ResourceKey="SystemControlHighlightAltChromeWhiteBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonForegroundCheckedPressed" -->
    <!--                 ResourceKey="SystemControlHighlightAltChromeWhiteBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonForegroundCheckedDisabled" -->
    <!--                 ResourceKey="SystemControlDisabledBaseMediumLowBrush" /> -->

    <StaticResource x:Key="SplitButtonBorderBrush" ResourceKey="SystemControlForegroundTransparentBrush" />
    <StaticResource x:Key="SplitButtonBorderBrushPointerOver" ResourceKey="SystemControlForegroundTransparentBrush" />
    <StaticResource x:Key="SplitButtonBorderBrushPressed" ResourceKey="SystemControlHighlightTransparentBrush" />
    <StaticResource x:Key="SplitButtonBorderBrushDisabled" ResourceKey="SystemControlDisabledTransparentBrush" />

    <!-- checked state not used at the moment -->
    <!-- <StaticResource x:Key="SplitButtonBorderBrushChecked" ResourceKey="SystemControlHighlightAltTransparentBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonBorderBrushCheckedPointerOver" -->
    <!--                 ResourceKey="SystemControlHighlightAltTransparentBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonBorderBrushCheckedPressed" -->
    <!--                 ResourceKey="SystemControlHighlightAltTransparentBrush" /> -->
    <!-- <StaticResource x:Key="SplitButtonBorderBrushCheckedDisabled" -->
    <!--                 ResourceKey="SystemControlDisabledTransparentBrush" /> -->

    <StaticResource x:Key="SplitButtonSeparatorBackground" ResourceKey="PrimaryStrongBrush" />
    <StaticResource x:Key="SplitButtonSeparatorBorderBrush" ResourceKey="BrandTranslucentDark100" />

    <Thickness x:Key="SplitButtonBorderThemeThickness">0</Thickness>

    <ControlTheme x:Key="FluentSplitButtonComponent" TargetType="Button">
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter x:Name="PART_ContentPresenter"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Padding="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPointerOver}" />
            <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPointerOver}" />
        </Style>

        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPressed}" />
            <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
        </Style>

        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundDisabled}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushDisabled}" />
            <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundDisabled}" />
        </Style>

        <Style Selector="^[Tag=flyout-open] /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushPressed}" />
            <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundPressed}" />
        </Style>

        <Style Selector="^[Tag=checked]">
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundChecked}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushChecked}" />
                <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundChecked}" />
            </Style>

            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundCheckedPointerOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPointerOver}" />
                <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPointerOver}" />
            </Style>

            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundCheckedPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
            </Style>

            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundCheckedDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedDisabled}" />
                <Setter Property="TextElement.Foreground"
                        Value="{DynamicResource SplitButtonForegroundCheckedDisabled}" />
            </Style>
        </Style>

        <Style Selector="^[Tag=checked-flyout-open] /template/ ContentPresenter">
            <Setter Property="Background" Value="{DynamicResource SplitButtonBackgroundCheckedPressed}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrushCheckedPressed}" />
            <Setter Property="Foreground" Value="{DynamicResource SplitButtonForegroundCheckedPressed}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">
        <Setter Property="Background" Value="{DynamicResource SplitButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SplitButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource SplitButtonBorderThemeThickness}" />
        <Setter Property="MinHeight" Value="{DynamicResource SplitButtonMinHeight}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource Rounded}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid ColumnDefinitions="*,Auto,Auto">
                    <Button x:Name="PART_PrimaryButton"
                            Grid.Column="0"
                            Theme="{StaticResource FluentSplitButtonComponent}"
                            MinWidth="{DynamicResource SplitButtonPrimaryButtonSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource PrimaryButtonBorderMultiplier}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False" />

                    <Border x:Name="SeparatorBorder"
                            Grid.Column="1"
                            Background="Transparent"
                            Width="{DynamicResource SplitButtonSeparatorWidth}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SeparatorBorderMultiplier}}"
                            BorderBrush="{TemplateBinding BorderBrush}" />

                    <Button x:Name="PART_SecondaryButton"
                            Grid.Column="2"
                            Theme="{StaticResource FluentSplitButtonComponent}"
                            MinWidth="{DynamicResource SplitButtonSecondaryButtonSize}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SecondaryButtonBorderMultiplier}}"
                            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            Padding="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False">
                        <!-- replaced PathIcon with our UnifiedIcon -->
                        <icons:UnifiedIcon Size="20" Value="{x:Static icons:IconValues.ChevronDown}" />
                    </Button>
                </Grid>
            </ControlTemplate>
        </Setter>
        
        <Style Selector="^:flyout-open /template/ Button">
            <Setter Property="Tag" Value="flyout-open" />
        </Style>

        <Style Selector="^:checked /template/ Button">
            <Setter Property="Tag" Value="checked" />
        </Style>

        <Style Selector="^:checked:flyout-open /template/ Button">
            <Setter Property="Tag" Value="checked-flyout-open" />
        </Style>
    </ControlTheme>
</ResourceDictionary>
