<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:icons="clr-namespace:NexusMods.Icons;assembly=NexusMods.Icons"
        xmlns:controls="clr-namespace:NexusMods.App.UI.Controls;assembly=NexusMods.App.UI"
        xmlns:panels="clr-namespace:Avalonia.Labs.Panels;assembly=Avalonia.Labs.Panels">
    <Design.PreviewWith>
        <Border Width="1000" Height="300">
            <Menu VerticalAlignment="Top">
                <MenuItem Header="First" IsSubMenuOpen="True">
                    <MenuItem Header="Item">
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.Code}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Disabled" IsEnabled="False" />
                    <Separator />
                    <MenuItem Header="Selected" IsSelected="True" />
                </MenuItem>
                <MenuItem Header="Second" />
                <MenuItem Header="Third" IsSubMenuOpen="True">
                    <MenuItem Header="With Icon">
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.Code}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="With Radio 1" ToggleType="Radio" GroupName="Group" IsChecked="True" />
                    <MenuItem Header="With Radio 2" ToggleType="Radio" GroupName="Group" />

                    <Separator />

                    <MenuItem Header="With CheckBox" ToggleType="CheckBox" IsChecked="True" />
                    <MenuItem>
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.NexusColor}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <panels:FlexPanel>
                                <TextBlock>Nexus Mods</TextBlock>
                            </panels:FlexPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Classes="Critical">
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.DeleteOutline}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <panels:FlexPanel>
                                <TextBlock>Something Critical</TextBlock>
                            </panels:FlexPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Classes="Premium">
                        <MenuItem.Icon>
                            <icons:UnifiedIcon Value="{x:Static icons:IconValues.Premium}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>Get Premium</TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>

                <MenuItem>
                    <!--
                    NOTE(erri120): The "top-level" menu items don't support icons. The theme "FluentTopLevelMenuItem"
                    gets set by the Menu itself:
                    https://github.com/AvaloniaUI/Avalonia/blob/82e3613939af5451597d3c19f3a48e0a8ba888f3/src/Avalonia.Themes.Fluent/Controls/Menu.xaml#L94

                    This ControlTheme (https://github.com/AvaloniaUI/Avalonia/blob/82e3613939af5451597d3c19f3a48e0a8ba888f3/src/Avalonia.Themes.Fluent/Controls/Menu.xaml#L16)
                    doesn't have the same layout as the normal MenuItem theme:
                    https://github.com/AvaloniaUI/Avalonia/blob/82e3613939af5451597d3c19f3a48e0a8ba888f3/src/Avalonia.Themes.Fluent/Controls/MenuItem.xaml#L58

                    As such, we have to manually set the Header to contain an Icon and a TextBlock Control.
                    To make this easier, you can use this control:
                    -->
                    <MenuItem.Header>
                        <controls:TopLevelMenuItemHeader Icon="{x:Static icons:IconValues.Code}" Text="With Icon" />
                    </MenuItem.Header>
                </MenuItem>
            </Menu>
        </Border>

    </Design.PreviewWith>

    <Style Selector="controls|TopLevelMenuItemHeader">
        <Style Selector="^ /template/ StackPanel#StackPanel">
            <Setter Property="Spacing" Value="8" />
        </Style>
    </Style>

    <Style Selector="MenuItem">
        <!--
        https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/MenuItem.xaml
        https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/MenuItem.cs
        -->

        <Setter Property="Foreground" Value="{StaticResource NeutralModerateBrush}" />
        <Setter Property="Background" Value="{StaticResource SurfaceMidBrush}" />
        <Setter Property="Padding" Value="12,6,12,6" />

        <Style Selector="^ ContentPresenter#PART_HeaderPresenter">
            <Setter Property="Foreground" Value="{StaticResource NeutralModerateBrush}" />
        </Style>

        <Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
            <Setter Property="IsVisible" Value="True" />
            <Setter Property="Margin" Value="0,1,12,0" />
        </Style>

        <!-- Hover state (yes, this is using :selected) -->
        <Style Selector="^:selected /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{StaticResource SurfaceHighBrush}" />

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralStrongBrush}" />
            </Style>
        </Style>

        <!-- Pressed state -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{StaticResource SurfaceTranslucentLowBrush}" />

            <Style Selector="^ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralModerateBrush}" />
            </Style>
        </Style>

        <!-- Disabled state -->
        <Style Selector="^:disabled /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{StaticResource SurfaceMidBrush}" />
            <Setter Property="Opacity" Value="{StaticResource OpacityDisabledElement}" />

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralModerate}" />
            </Style>
        </Style>

        <!-- seperator -->
        <Style Selector="^ > Separator">
            <Setter Property="Background" Value="{StaticResource SurfaceTranslucentMidBrush}" />
            <Setter Property="Height" Value="1" />
        </Style>

        <Style Selector="^ /template/ Border#PART_LayoutRoot">
            <Setter Property="Background" Value="{StaticResource SurfaceMid}" />
            <Setter Property="CornerRadius" Value="{StaticResource Rounded}" />
        </Style>


        <Style Selector="^.Critical">
            <Style Selector="^ /template/ ContentControl#PART_IconPresenter">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Foreground" Value="{StaticResource DangerStrongBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource DangerStrongBrush}" />
            </Style>
        </Style>
        
        <Style Selector="^.Premium">
            <Setter Property="Background" Value="{StaticResource PremiumSubduedBrush}" />

            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralStrongBrush}" />
            </Style>
            
            <Style Selector="^ /template/ ContentControl#PART_IconPresenter">
                <Setter Property="Foreground" Value="{StaticResource NeutralStrongBrush}" />
            </Style>
            
            <!-- Hover state (yes, this is using :selected) -->
            <Style Selector="^:selected /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{StaticResource PremiumModerateBrush}" />
            </Style>
            
            <!-- Pressed state -->
            <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
                <Setter Property="Background" Value="{StaticResource PremiumWeakBrush}" />
            </Style>
        </Style>

    </Style>

</Styles>
