<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:NexusMods.Icons;assembly=NexusMods.Icons">

    <Design.PreviewWith>
        <Border Padding="16" Width="360" Height="240">
            <StackPanel>
                <SplitButton>
                    <TextBlock Text="Enabled" />
                    <SplitButton.Flyout>
                        <MenuFlyout>
                            <MenuItem Header="Install" />
                            <MenuItem Header="Advanced Install" />
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
                <SplitButton IsEnabled="False">
                    <TextBlock Text="Disabled" />
                    <SplitButton.Flyout>
                        <MenuFlyout>
                            <MenuItem Header="Install" />
                            <MenuItem Header="Advanced Install" />
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <x:Double x:Key="SplitButtonPrimaryButtonSize">32</x:Double>
    <x:Double x:Key="SplitButtonSecondaryButtonSize">28</x:Double>
    <x:Double x:Key="SplitButtonSeparatorWidth">1</x:Double>
    <!-- <x:Double x:Key="SplitButtonMinHeight">28</x:Double> -->

    <ControlTheme x:Key="FluentSplitButtonComponent" TargetType="Button">
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter x:Name="PART_ContentPresenter"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Padding="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundPointerOver}" />
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushPointerOver}" />
            <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundPointerOver}" />
        </Style>

        <Style Selector="^:pressed /template/ ContentPresenter">
            <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushPressed}" />
            <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundPressed}" />
        </Style>

        <Style Selector="^:disabled /template/ ContentPresenter">
            <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundDisabled}" />
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushDisabled}" />
            <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundDisabled}" />
        </Style>

        <Style Selector="^[Tag=flyout-open] /template/ ContentPresenter">
            <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundPressed}" />
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushPressed}" />
            <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundPressed}" />
        </Style>

        <Style Selector="^[Tag=checked]">
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundChecked}" />
                <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushChecked}" />
                <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundChecked}" />
            </Style>

            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundCheckedPointerOver}" />
                <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushCheckedPointerOver}" />
                <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundCheckedPointerOver}" />
            </Style>

            <Style Selector="^:pressed /template/ ContentPresenter">
                <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundCheckedPressed}" />
                <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushCheckedPressed}" />
                <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundCheckedPressed}" />
            </Style>

            <Style Selector="^:disabled /template/ ContentPresenter">
                <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundCheckedDisabled}" />
                <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushCheckedDisabled}" />
                <Setter Property="TextElement.Foreground"
                        Value="{StaticResource SplitButtonForegroundCheckedDisabled}" />
            </Style>
        </Style>

        <Style Selector="^[Tag=checked-flyout-open] /template/ ContentPresenter">
            <Setter Property="Background" Value="{StaticResource SplitButtonBackgroundCheckedPressed}" />
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrushCheckedPressed}" />
            <Setter Property="Foreground" Value="{StaticResource SplitButtonForegroundCheckedPressed}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">
        <Setter Property="Background" Value="{StaticResource SplitButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource SplitButtonForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource SplitButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource SplitButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
        <Setter Property="CornerRadius" Value="{StaticResource Rounded}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid ColumnDefinitions="*,Auto,Auto">
                    <Button x:Name="PART_PrimaryButton"
                            Grid.Column="0"
                            Theme="{StaticResource FluentSplitButtonComponent}"
                            MinWidth="{StaticResource SplitButtonPrimaryButtonSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource PrimaryButtonBorderMultiplier}}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Padding="{TemplateBinding Padding}"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False" />

                    <Border x:Name="SeparatorBorder"
                            Grid.Column="1"
                            Background="Transparent"
                            Width="{StaticResource SplitButtonSeparatorWidth}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SeparatorBorderMultiplier}}"
                            BorderBrush="{TemplateBinding BorderBrush}" />

                    <Button x:Name="PART_SecondaryButton"
                            Grid.Column="2"
                            Theme="{StaticResource FluentSplitButtonComponent}"
                            MinWidth="{StaticResource SplitButtonSecondaryButtonSize}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SecondaryButtonBorderMultiplier}}"
                            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            Padding="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Focusable="False"
                            KeyboardNavigation.IsTabStop="False">
                        <!-- replaced PathIcon with our UnifiedIcon -->
                        <icons:UnifiedIcon Size="20" Value="{x:Static icons:IconValues.ChevronDown}" />
                    </Button>
                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:flyout-open /template/ Button">
            <Setter Property="Tag" Value="flyout-open" />
        </Style>

        <Style Selector="^:checked /template/ Button">
            <Setter Property="Tag" Value="checked" />
        </Style>

        <Style Selector="^:checked:flyout-open /template/ Button">
            <Setter Property="Tag" Value="checked-flyout-open" />
        </Style>
    </ControlTheme>

</ResourceDictionary>
