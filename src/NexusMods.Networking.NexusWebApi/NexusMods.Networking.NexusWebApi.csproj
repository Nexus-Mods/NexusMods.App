<Project Sdk="Microsoft.NET.Sdk">
    <!-- NuGet Package Shared Details -->
    <Import Project="$([MSBuild]::GetPathOfFileAbove('NuGet.Build.props', '$(MSBuildThisFileDirectory)../'))" />

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" />
        <PackageReference Include="Microsoft.AspNetCore.WebUtilities" />
        <PackageReference Include="StrawberryShake.Server" />
    </ItemGroup>
    
    <ItemGroup>
        <InternalsVisibleTo Include="NexusMods.Networking.NexusWebApi.Tests" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\NexusMods.Abstractions.Cli\NexusMods.Abstractions.Cli.csproj" />
        <ProjectReference Include="..\NexusMods.Abstractions.Collections\NexusMods.Abstractions.Collections.csproj" />
        <ProjectReference Include="..\NexusMods.Abstractions.NexusModsLibrary\NexusMods.Abstractions.NexusModsLibrary.csproj" />
        <ProjectReference Include="..\NexusMods.Abstractions.NexusWebApi\NexusMods.Abstractions.NexusWebApi.csproj" />
        <PackageReference Include="NexusMods.MnemonicDB.SourceGenerator" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <ProjectReference Include="..\NexusMods.Abstractions.Telemetry\NexusMods.Abstractions.Telemetry.csproj" />
        <ProjectReference Include="..\NexusMods.Networking.HttpDownloader\NexusMods.Networking.HttpDownloader.csproj" />
        <ProjectReference Include="..\NexusMods.Networking.ModUpdates\NexusMods.Networking.ModUpdates.csproj" />
    </ItemGroup>

    <PropertyGroup>
        <GamesJsonInput>https://data.nexusmods.com/file/nexus-data/games.json</GamesJsonInput>
        <GamesJsonOutput>$(BaseIntermediateOutputPath)games.json</GamesJsonOutput>
    </PropertyGroup>

    <!-- NOTE(erri120): Downloading the games.json file at build time if it doesn't exist -->
    <Target Name="DownloadGamesJson" BeforeTargets="BeforeBuild" Condition="!Exists('$(GamesJsonOutput)')">
        <MakeDir Directories="$(BaseIntermediateOutputPath)" />
        <Exec Condition="'$(OS)' != 'Windows_NT'" Command="curl -sSL -o $(GamesJsonOutput) $(GamesJsonInput)"  />
        <Exec Condition="'$(OS)' == 'Windows_NT'" Command="powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;Invoke-WebRequest -Uri '$(GamesJsonInput)' -OutFile '$(GamesJsonOutput)'&quot;" />
    </Target>

    <Target Name="EmbedOutput" AfterTargets="DownloadGamesJson">
        <Error Condition="!Exists('$(GamesJsonOutput)')" Text="Failed to embed file $(GamesJsonOutput)" />

        <ItemGroup>
            <EmbeddedResource Include="$(GamesJsonOutput)" LogicalName="games.json" />
        </ItemGroup>
    </Target>

    <ItemGroup>
      <Compile Update="V1Interop\GameMetadata.cs">
        <DependentUpon>LocalMappingCache.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\GraphQlResult.cs">
        <DependentUpon>IGraphQlResult.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\NotFound.cs">
        <DependentUpon>IGraphQlError.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\CollectionDiscarded.cs">
        <DependentUpon>IGraphQlError.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\CollectionRevisionDiscarded.cs">
        <DependentUpon>IGraphQlError.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\UnknownError.cs">
        <DependentUpon>IGraphQlError.cs</DependentUpon>
      </Compile>
      <Compile Update="Errors\Invalid.cs">
        <DependentUpon>IGraphQlError.cs</DependentUpon>
      </Compile>
    </ItemGroup>
</Project>
